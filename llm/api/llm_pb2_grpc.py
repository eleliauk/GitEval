# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import llm_pb2 as llm__pb2


class LLMServiceStub(object):
    """定义服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEvaluation = channel.unary_unary(
                '/llm.LLMService/GetEvaluation',
                request_serializer=llm__pb2.GetEvaluationRequest.SerializeToString,
                response_deserializer=llm__pb2.GetEvaluationResponse.FromString,
                )
        self.GetArea = channel.unary_unary(
                '/llm.LLMService/GetArea',
                request_serializer=llm__pb2.GetAreaRequest.SerializeToString,
                response_deserializer=llm__pb2.GetAreaResponse.FromString,
                )
        self.GetDomain = channel.unary_unary(
                '/llm.LLMService/GetDomain',
                request_serializer=llm__pb2.GetDomainRequest.SerializeToString,
                response_deserializer=llm__pb2.GetDomainResponse.FromString,
                )


class LLMServiceServicer(object):
    """定义服务
    """

    def GetEvaluation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LLMServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEvaluation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvaluation,
                    request_deserializer=llm__pb2.GetEvaluationRequest.FromString,
                    response_serializer=llm__pb2.GetEvaluationResponse.SerializeToString,
            ),
            'GetArea': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArea,
                    request_deserializer=llm__pb2.GetAreaRequest.FromString,
                    response_serializer=llm__pb2.GetAreaResponse.SerializeToString,
            ),
            'GetDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDomain,
                    request_deserializer=llm__pb2.GetDomainRequest.FromString,
                    response_serializer=llm__pb2.GetDomainResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'llm.LLMService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LLMService(object):
    """定义服务
    """

    @staticmethod
    def GetEvaluation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/llm.LLMService/GetEvaluation',
            llm__pb2.GetEvaluationRequest.SerializeToString,
            llm__pb2.GetEvaluationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/llm.LLMService/GetArea',
            llm__pb2.GetAreaRequest.SerializeToString,
            llm__pb2.GetAreaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/llm.LLMService/GetDomain',
            llm__pb2.GetDomainRequest.SerializeToString,
            llm__pb2.GetDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
